{"version":3,"file":"static/js/763.34fbda77.chunk.js","mappings":"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","sources":["webpack://react-lesson1/./src/components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css?a7c9","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://react-lesson1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-lesson1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utilits/validators/validators.js","webpack://react-lesson1/./src/components/common/FormsControls/FormControls.module.css?2a3b","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__bjGBA\",\"mainPhoto\":\"ProfileInfo_mainPhoto__HILH-\",\"contact\":\"ProfileInfo_contact__tOzzz\"};","import React, {useEffect, useState} from \"react\"\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={ activateEditMode }>{props.status || '----'}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input\n                        onChange={onStatusChange}\n                        onBlur={deactivateEditMode}\n                        value={status}\n                        autoFocus={true}\n                        />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport s from './ProfileInfo.module.css'\nimport {Field, reduxForm} from \"redux-form\";\nimport { Input, Textarea } from \"../../../common/FormsControls/FormsControls\";\nimport styles from \"../../../common/FormsControls/FormControls.module.css\";\n\nconst ProfileDataForm = ({profile, handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button>save</button>\n            </div>\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <b>Full Name: </b> <Field\n                placeholder={'Full Name'}\n                name={'fullName'}\n                component={Input}\n            />\n            </div>\n            <div>\n                <b>Looking for a job: </b> <Field\n                type={\"checkbox\"}\n                name={'lookingForAJob'}\n                component={Input}\n            />\n            </div>\n            <div>\n                <b>My professional skills:</b> <Field\n                placeholder={'My professional skills...'}\n                name={'lookingForAJobDescription'}\n                component={Textarea}\n            />\n            </div>\n            <div>\n                <b>About me: </b> <Field\n                placeholder={'About me...'}\n                name={'aboutMe'}\n                component={Textarea}\n            />\n            </div>\n            <div>\n                <b>Contacts: </b> {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={s.contact}>\n                    <b>{key}: </b> <Field\n                    placeholder={key}\n                    name={\"contacts.\" + key.toLocaleLowerCase()}\n                    component={Input}\n                />\n                </div>\n            })}\n            </div>\n        </form>\n    )\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\n\nexport default ProfileDataFormReduxForm","import React, {useState} from \"react\"\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../../assets/images/computer-user-icon-2.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\n\nconst ProfileInfo = ({profile, savePhoto, updateStatus, status, isOwner, saveProfile}) => {\n    let [editMode, setEditMode] = useState(false)\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if(e.target.files.length) {\n            savePhoto(e.target.files[0])\n        }\n    }\n\n    const onSubmit = (formData) => {\n        saveProfile(formData).then(()=>{\n            setEditMode(false)\n        })\n    }\n\n    return (\n        <div>\n            <div>\n\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={profile.photos.large || userPhoto} className={s.mainPhoto}/>\n                {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected}/>}\n\n                <ProfileStatusWithHooks\n                    status={status}\n                    updateStatus={updateStatus}\n                />\n\n                { editMode ? <ProfileDataForm initialValues={profile} onSubmit={onSubmit} profile={profile}/>\n                    :  <ProfileData profile={profile} isOwner={isOwner}\n                                    goToEditMode={() => {setEditMode(true)}}/>}\n            </div>\n        </div>\n    )\n}\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return <div>\n        {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\n        <div>\n            <b>Name: </b> {profile.fullName}\n        </div>\n        <div>\n            <b>About me: </b> {profile.aboutMe}\n        </div>\n        <div>\n            <b>Looking for a job: </b> { profile.lookingForAJob ? 'Yes!' : 'No'}\n        </div>\n        <div>\n            { profile.lookingForAJob &&\n                <div>{ profile.lookingForAJobDescription}</div>\n            }\n        </div>\n        <div>\n            <b>Contacts: </b> {Object.keys( profile.contacts).map(\n            key => {return  <Contact key={key} contactTitle={key}\n                                     contactValue={ profile.contacts[key]}/>}) }\n        </div>\n    </div>\n}\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return (\n        <div className={s.contact}>\n            <b>{contactTitle}</b>: {contactValue}\n        </div>\n    )\n}\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"textArea\":\"MyPosts_textArea__S6OuX\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\"\nimport s from './Post.module.css'\n\n\n\nconst Post = (props) => {\n\n    let deletePost = () => {\n        props.delete(props.id)\n    }\n    let likePost = () => {\n        props.like(props.id)\n    }\n    return (\n            <div className={s.item}>\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjEWTaMjIzoQeuBAsIeOia_1Wi4mCJrKX_YQ&usqp=CAU\" />\n                { props.postMessage }\n                <div>\n                    <div>\n                        <button onClick={likePost}>Like</button>\n                    </div>\n                    <div>{ props.likesCount }</div>\n                    <div>\n                        <button onClick={deletePost}>Delete</button>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default Post;","import React from \"react\"\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst MyPostsForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={Textarea}\n                    name={'newPostBody'}\n                    placeholder={'Enter your post here...'}\n                    validate={[required, maxLength10]}\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n            </form>\n    )\n}\n\nconst MyPosts = React.memo(props => {\n    const like = props.like\n    const del = props.delete\n    let mappedPosts = props.posts\n        .map((p) => <Post\n            like={like}\n            id={p.id}\n            delete={del}\n            postMessage={p.message}\n            key={p.id}\n            likesCount={p.likesCount}\n\n        />)\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <MyReduxFormPost onSubmit={props.addNewPostText}/>\n            </div>\n            <div className={s.posts}>\n                {mappedPosts}\n            </div>\n        </div>\n    )\n})\n\nconst MyReduxFormPost = reduxForm({\n    form: 'profileAddPostForm'\n})(MyPostsForm)\n\nexport default MyPosts;","import React from \"react\"\nimport {addNewLike, addPostCreator, deletePost} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nclass MyPostsContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    addNewPostText = (values) => {\n        this.props.addPost(values.newPostBody)\n    }\n\n    render() {\n        return (\n           <MyPosts\n                    newPostText={this.props.newPostText}\n                    posts={this.props.posts}\n                    addNewPostText={this.addNewPostText}\n                    delete={this.props.delete}\n                    like={this.props.like}\n           />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostBody) => {\n            dispatch(addPostCreator(newPostBody));\n        },\n        delete: (postId) => {\n            dispatch(deletePost(postId))\n        },\n        like: (postId) => {\n            dispatch(addNewLike(postId))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer)","import React from \"react\"\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\n\nconst Profile = (props) => {\n\n\n    return (\n        <div>\n            <ProfileInfo\n                saveProfile={props.saveProfile}\n                savePhoto={props.savePhoto}\n                isOwner={props.isOwner}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n            />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\"\nimport Profile from \"./Profile\";\nimport {\n    addNewLike,\n    deletePost,\n    getStatus,\n    getUserProfile, savePhoto, saveProfile,\n    setUserProfile,\n    updateStatus\n} from \"../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n    refreshProfile() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorisedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.profileMatchThunkCreator(userId)\n        this.props.getStatus(userId)\n    }\n\n    componentDidMount() {\n        this.refreshProfile()\n    }\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\n            this.refreshProfile()\n        }\n    }\n\n    render() {\n        if (!this.props.isAuth) {\n            return <Redirect to={'/login'}/>\n        }\n        return (\n            <div>\n                <Profile {...this.props}\n                         isOwner={!this.props.match.params.userId}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}\n                         savePhoto={this.props.savePhoto}\n                />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authorisedUserId: state.auth.userId,\n})\n\nexport default compose(\n    connect(mapStateToProps,\n        {\n            setUserProfile,\n            profileMatchThunkCreator: getUserProfile,\n            getStatus,\n            updateStatus,\n            deletePost,\n            addNewLike,\n            savePhoto,\n            saveProfile\n        }),\n    withRouter,\n    //withAuthRedirect\n)(ProfileContainer)","import React from \"react\";\nimport styles from './FormControls.module.css'\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            <div>\n                { hasError && <span>{meta.error}</span> }\n            </div>\n\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n    )\n}\n\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n            {...props}/> {text}\n    </div>\n)\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n    )\n}","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__1L7zq\",\"error\":\"FormControls_error__aTANB\",\"formSummaryError\":\"FormControls_formSummaryError__12VA3\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","reduxForm","form","profile","handleSubmit","error","onSubmit","className","styles","Field","placeholder","name","component","Input","type","Textarea","Object","keys","contacts","map","key","s","toLocaleLowerCase","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","target","files","length","initialValues","formData","then","postMessage","like","id","likesCount","delete","maxLength10","maxLengthCreator","MyPosts","React","del","mappedPosts","posts","p","message","MyReduxFormPost","addNewPostText","validate","required","MyPostsContainer","values","addPost","newPostBody","newPostText","this","connect","state","profilePage","dispatch","addPostCreator","postId","deletePost","addNewLike","ProfileContainer","userId","match","params","authorisedUserId","history","push","profileMatchThunkCreator","getStatus","refreshProfile","prevProps","prevState","snapshot","isAuth","to","compose","auth","setUserProfile","getUserProfile","withRouter","FormControl","input","meta","child","hasError","touched","children","restProps","maxLength","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}