{"version":3,"file":"static/js/797.f9b9a869.chunk.js","mappings":"4NAuDMA,GAAiBC,EAAAA,EAAAA,GAAU,CAC7BC,KAAM,SADaD,EA9CL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACrC,OACI,kBAAMC,SAAUH,EAAhB,WACI,0BACI,SAAC,IAAD,CACII,YAAa,QACbC,KAAM,QACNC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,QAGnB,0BACI,SAAC,IAAD,CACIL,YAAa,WACbC,KAAM,WACNK,KAAM,WACNJ,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,QAGnB,4BACI,SAAC,IAAD,CACIC,KAAM,WACNL,KAAM,aACNC,UAAWC,EAAAA,KAJnB,kBAQCL,IAAc,gBAAKS,IAAKT,IACxBA,IAAc,SAAC,IAAD,CACXE,YAAa,qBACbC,KAAM,UACNC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,KAGdR,IAAS,gBAAKW,UAAWC,EAAAA,EAAAA,iBAAhB,SACLZ,KAEL,0BACI,8CA6BhB,WAAea,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCb,WAAYa,EAAMC,KAAKd,WACvBe,OAAQF,EAAMC,KAAKC,UAEiB,CAACC,MAAAA,EAAAA,IAAzC,EAnBc,SAACC,GAKX,OAAGA,EAAMF,QACE,SAAC,KAAD,CAAUG,GAAI,cAGrB,4BACI,mCACA,SAACvB,EAAD,CAAgBM,SAVP,SAACkB,GACdF,EAAMD,MAAMG,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UASrCvB,WAAYiB,EAAMjB,oB,mMClE5DwB,EAAc,SAAC,GAAmC,EAAlCC,MAAmC,IAA5BC,EAA2B,EAA3BA,KAAgBT,GAAW,EAArBU,OAAqB,aAC9CC,EAAWF,EAAKG,SAAWH,EAAK3B,MACtC,OACI,iBAAKW,UAAWC,EAAAA,EAAAA,YAAqB,KAAOiB,EAAWjB,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBACKM,EAAMa,YAEX,yBACMF,IAAY,0BAAOF,EAAK3B,cAQ7BgC,EAAW,SAACd,GACrB,IAAOQ,EAA6BR,EAA7BQ,MAAgBO,GAAaf,EAAtBS,MAAd,OAAoCT,EAApC,IACA,OACI,SAACO,GAAD,kBAAiBP,GAAjB,cAAwB,uCAAcQ,GAAWO,QAa5C3B,EAAQ,SAACY,GAClB,IAAOQ,EAA6BR,EAA7BQ,MAAgBO,GAAaf,EAAtBS,MAAd,OAAoCT,EAApC,IACA,OACI,SAACO,GAAD,kBAAiBP,GAAjB,cAAwB,oCAAWQ,GAAWO,S,4ECvC/C,IAAMzB,EAAW,SAAA0B,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAACF,GAC5C,GAAIA,GAASA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,kBCL3C,KAAgB,YAAc,kCAAkC,MAAQ,4BAA4B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utilits/validators/validators.js","webpack://react-lesson1/./src/components/common/FormsControls/FormControls.module.css?2a3b"],"sourcesContent":["import React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utilits/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/authReducer\";\nimport {Redirect} from \"react-router-dom\";\nimport styles from \"../common/FormsControls/FormControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <Field\n                    placeholder={'Email'}\n                    name={'email'}\n                    component={Input}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    placeholder={'Password'}\n                    name={'password'}\n                    type={'password'}\n                    component={Input}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    type={\"checkbox\"}\n                    name={'rememberMe'}\n                    component={Input}\n                /> remember me\n            </div>\n\n            {captchaUrl && <img src={captchaUrl}/>}\n            {captchaUrl && <Field\n                placeholder={'Symbols from image'}\n                name={'captcha'}\n                component={Input}\n                validate={[required]}\n            />}\n\n            {error && <div className={styles.formSummaryError}>\n                {error}\n            </div>}\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({\n    form: 'login'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\n    }\n\n    if(props.isAuth) {\n        return <Redirect to={'/profile'} />\n    }\n    return (\n        <div>\n            <h1>Login</h1>\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\n        </div>\n    )\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\nexport default connect(mapStateToProps, {login}) (Login);","import React from \"react\";\nimport styles from './FormControls.module.css'\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            <div>\n                { hasError && <span>{meta.error}</span> }\n            </div>\n\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n    )\n}\n\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n            {...props}/> {text}\n    </div>\n)\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n    )\n}","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__1L7zq\",\"error\":\"FormControls_error__aTANB\",\"formSummaryError\":\"FormControls_formSummaryError__12VA3\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","placeholder","name","component","Input","validate","required","type","src","className","styles","connect","state","auth","isAuth","login","props","to","formData","email","password","rememberMe","captcha","FormControl","input","meta","child","hasError","touched","children","Textarea","restProps","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}