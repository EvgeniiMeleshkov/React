{"version":3,"file":"static/js/165.82b33bee.chunk.js","mappings":"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","sources":["webpack://react-lesson1/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://react-lesson1/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://react-lesson1/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utilits/validators/validators.js","webpack://react-lesson1/./src/components/common/FormsControls/FormControls.module.css?2a3b"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"active\":\"Dialogs_active__t8cjl\",\"messages\":\"Dialogs_messages__Cg2l+\",\"message\":\"Dialogs_message__ZEWo0\",\"textArea\":\"Dialogs_textArea__SCzCA\",\"button\":\"Dialogs_button__8Qbmd\"};","// extracted by mini-css-extract-plugin\nexport default {\"img\":\"DialogItem_img__+FCAU\",\"dialog\":\"DialogItem_dialog__gU34-\"};","import React from \"react\";\nimport s from './DialogItem.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n\n\n\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to = {String(props.id)} > { props.name }  <img className={s.img} src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT9KGRjFy87J9t4bCpOmz2ukXutLOlTP-5I3A&usqp=CAU' alt='description'/> </NavLink>\n\n\n        </div>\n    )\n}\n\nexport default DialogItem","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\"};","import React from \"react\";\nimport s from './Message.module.css'\n\n\nconst Message = (props) => {\n    return (\n        <div>\n            <div className={s.message}>\n                {props.message}\n            </div>\n\n        </div>\n    )\n}\n\nexport default Message","import React from \"react\";\nimport s from './Dialogs.module.css'\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utilits/validators/validators\";\n\nconst maxLength300 = maxLengthCreator(300)\n\nconst AddMessageForm = (props) => {\n\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={Textarea}\n                    name={'newMessageBody'}\n                    placeholder={'Enter your message here...'}\n                    validate={[required, maxLength300]}\n                />\n            </div>\n            <div className={s.button}>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n}\n\n\nconst Dialogs = (props) => {\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {props.dialogsPage.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>)}\n            </div>\n            <div className={s.messages}>\n                <div>{props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}/>)}</div>\n            </div>\n            <AddMessageReduxForm onSubmit={props.addNewMessage}/>\n        </div>\n    )\n}\n\nconst AddMessageReduxForm = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm)\n\n\nexport default Dialogs","import React from \"react\";\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\"\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nclass DialogsContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    addNewMessage = (values) => {\n        this.props.SendMessage(values.newMessageBody)\n    }\n\n    render() {\n\n\n        if (!this.props.isAuth) return <Redirect to={'/login'}/>\n\n\n        return (\n            <Dialogs\n                dialogsPage={this.props.dialogsPage}\n                onNewMessageChange={this.onNewMessageChange}\n                onSendMessageClick={this.onSendMessageClick}\n                addNewMessage={this.addNewMessage}\n            />\n        )\n    }\n}\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n};\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        SendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        }\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(DialogsContainer);","import React from \"react\";\nimport styles from './FormControls.module.css'\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            <div>\n                { hasError && <span>{meta.error}</span> }\n            </div>\n\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n    )\n}\n\nexport const CreateField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder}\n               name={name}\n               validate={validators}\n            {...props}/> {text}\n    </div>\n)\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n    )\n}","import React from \"react\";\nimport {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if(!this.props.isAuth) return <Redirect to='/login'/>\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n    return ConnectedAuthRedirectComponent\n}","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__1L7zq\",\"error\":\"FormControls_error__aTANB\",\"formSummaryError\":\"FormControls_formSummaryError__12VA3\"};"],"names":["props","className","s","to","String","id","name","src","alt","message","maxLength300","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","required","dialogsPage","dialogs","map","d","messages","m","addNewMessage","DialogsContainer","values","SendMessage","newMessageBody","this","isAuth","onNewMessageChange","onSendMessageClick","React","compose","connect","state","dispatch","sendMessageCreator","withAuthRedirect","FormControl","input","meta","child","hasError","touched","error","styles","children","restProps","Input","mapStateToPropsForRedirect","auth","Component","RedirectComponent","value","maxLength","length"],"sourceRoot":""}