{"version":3,"file":"static/js/463.817caf9b.chunk.js","mappings":"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","sources":["components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","webpack://react-lesson1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://react-lesson1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","utilits/validators/validators.js","webpack://react-lesson1/./src/components/common/FormsControls/FormControls.module.css?2a3b","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__bjGBA\"};","import React, {useEffect, useState} from \"react\"\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false)\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n\n    const activateEditMode = () => {\n        setEditMode(true)\n    }\n    const deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={ activateEditMode }>{props.status || '----'}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input\n                        onChange={onStatusChange}\n                        onBlur={deactivateEditMode}\n                        value={status}\n                        autoFocus={true}\n                        />\n                </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from \"react\"\nimport s from './ProfileInfo.module.css'\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nimport userPhoto from \"../../../../assets/images/computer-user-icon-2.png\";\n\n\nconst ProfileInfo = React.memo(props => {\n    if (!props.profile) {\n        return <Preloader/>\n    }\n    //useHooks!!!\n    const changeJ = () => {\n        props.changeLookingForJob(!props.areLookingForJob)\n    }\n\n    return (\n        <div>\n            <div>\n\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto}/>\n                <ProfileStatusWithHooks\n                    status={props.status}\n                    updateStatus={props.updateStatus}\n                />\n                <div>Name: {props.profile.fullName}</div>\n                <div>About me: {props.profile.aboutMe} </div>\n                <div onDoubleClick={changeJ}>{props.areLookingForJob ? 'üôãüèº‚Äç‚ôÇÔ∏è' : 'üôÖüèº‚Äç‚ôÇÔ∏è'}</div>\n                <div>{props.profile.lookingForAJobDescription}</div>\n            </div>\n        </div>\n    )\n})\n\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__lB-pf\",\"textArea\":\"MyPosts_textArea__S6OuX\",\"posts\":\"MyPosts_posts__GSiZ2\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from \"react\"\nimport s from './Post.module.css'\n\n\n\nconst Post = (props) => {\n\n    let deletePost = () => {\n        props.delete(props.id)\n    }\n    let likePost = () => {\n        props.like(props.id)\n    }\n    return (\n            <div className={s.item}>\n                <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQjEWTaMjIzoQeuBAsIeOia_1Wi4mCJrKX_YQ&usqp=CAU\" />\n                { props.postMessage }\n                <div>\n                    <div>\n                        <button onClick={likePost}>Like</button>\n                    </div>\n                    <div>{ props.likesCount }</div>\n                    <div>\n                        <button onClick={deletePost}>Delete</button>\n                    </div>\n                </div>\n            </div>\n    )\n}\n\nexport default Post;","import React from \"react\"\nimport s from './MyPosts.module.css'\nimport Post from \"./Post/Post\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utilits/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10)\n\nconst MyPostsForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={Textarea}\n                    name={'newPostBody'}\n                    placeholder={'Enter your post here...'}\n                    validate={[required, maxLength10]}\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n            </form>\n    )\n}\n\nconst MyPosts = React.memo(props => {\n    const like = props.like\n    const del = props.delete\n    let mappedPosts = props.posts\n        .map((p) => <Post\n            like={like}\n            id={p.id}\n            delete={del}\n            postMessage={p.message}\n            key={p.id}\n            likesCount={p.likesCount}\n\n        />)\n    return (\n        <div className={s.postsBlock}>\n            <h3>My posts</h3>\n            <div>\n                <MyReduxFormPost onSubmit={props.addNewPostText}/>\n            </div>\n            <div className={s.posts}>\n                {mappedPosts}\n            </div>\n        </div>\n    )\n})\n\nconst MyReduxFormPost = reduxForm({\n    form: 'profileAddPostForm'\n})(MyPostsForm)\n\nexport default MyPosts;","import React from \"react\"\nimport {addNewLike, addPostCreator, deletePost} from \"../../../redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\n\nclass MyPostsContainer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    addNewPostText = (values) => {\n        this.props.addPost(values.newPostBody)\n    }\n\n    render() {\n        return (\n           <MyPosts\n                    newPostText={this.props.newPostText}\n                    posts={this.props.posts}\n                    addNewPostText={this.addNewPostText}\n                    delete={this.props.delete}\n                    like={this.props.like}\n           />\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostBody) => {\n            dispatch(addPostCreator(newPostBody));\n        },\n        delete: (postId) => {\n            dispatch(deletePost(postId))\n        },\n        like: (postId) => {\n            dispatch(addNewLike(postId))\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyPostsContainer)","import React from \"react\"\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport {changeLookingForJob} from \"../../redux/profileReducer\";\n\n\n\nconst Profile = (props) => {\n\n\n    return (\n        <div>\n            <ProfileInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                areLookingForJob={props.areLookingForJob}\n                changeLookingForJob={props.changeLookingForJob}\n            />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import React from \"react\"\nimport Profile from \"./Profile\";\nimport {\n    addNewLike, changeLookingForJob,\n    deletePost,\n    getStatus,\n    profileMatchThunkCreator,\n    setUserProfile,\n    updateStatus\n} from \"../../redux/profileReducer\";\nimport {connect} from \"react-redux\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n\n    componentDidMount() {\n\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = this.props.authorisedUserId;\n            if (!userId) {\n                this.props.history.push('/login')\n            }\n        }\n        this.props.profileMatchThunkCreator(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        if(!this.props.isAuth) {\n            return <Redirect to={'/login'} />\n        }\n        return (\n            <div>\n                <Profile {...this.props}\n                         profile={this.props.profile}\n                         status={this.props.status}\n                         updateStatus={this.props.updateStatus}\n                         areLookingForJob={this.props.areLookingForJob}\n                         changeLookingForJob={this.props.changeLookingForJob}\n                />\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    areLookingForJob: state.profilePage.areLookingForJob,\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authorisedUserId: state.auth.userId,\n})\n\nexport default compose(\n    connect(mapStateToProps,\n        {\n            setUserProfile,\n            profileMatchThunkCreator,\n            getStatus,\n            updateStatus,\n            deletePost,\n            addNewLike,\n            changeLookingForJob\n        }),\n    withRouter,\n    //withAuthRedirect\n)(ProfileContainer)","import React from \"react\";\nimport styles from './FormControls.module.css'\n\nconst FormControl = ({input, meta, child, ...props}) => {\n    const hasError = meta.touched && meta.error\n\n    return (\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\n            <div>\n                {props.children}\n            </div>\n            <div>\n                { hasError && <span>{meta.error}</span> }\n            </div>\n\n        </div>\n    )\n}\n\n\nexport const Textarea = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n    )\n}\n\n\n\nexport const Input = (props) => {\n    const {input, meta, ...restProps} = props;\n    return (\n        <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n    )\n}","export const required = value => {\n    if (value) return undefined;\n    return 'Field is required';\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormControls_formControl__1L7zq\",\"error\":\"FormControls_error__aTANB\",\"formSummaryError\":\"FormControls_formSummaryError__12VA3\"};","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateStatus","autoFocus","React","profile","Preloader","className","s","src","photos","large","userPhoto","fullName","aboutMe","changeLookingForJob","areLookingForJob","lookingForAJobDescription","postMessage","onClick","like","id","likesCount","delete","maxLength10","maxLengthCreator","MyPosts","del","mappedPosts","posts","map","p","message","MyReduxFormPost","onSubmit","addNewPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","MyPostsContainer","values","addPost","newPostBody","newPostText","this","connect","state","profilePage","dispatch","addPostCreator","postId","deletePost","addNewLike","ProfileContainer","userId","match","params","authorisedUserId","history","push","profileMatchThunkCreator","getStatus","isAuth","to","compose","auth","setUserProfile","withRouter","FormControl","input","meta","child","hasError","touched","error","styles","children","restProps","Input","maxLength","length","_slicedToArray","arr","i","Array","isArray","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","unsupportedIterableToArray","TypeError"],"sourceRoot":""}